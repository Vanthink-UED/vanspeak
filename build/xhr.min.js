var xhr=function(e,n,r,s,t){function o(e){for(var n,r={},s=/([a-z\-]+):\s?(.*);?/gi;n=s.exec(e);)r[n[1]]=n[2];return r}var a=new XMLHttpRequest,i=this.error,p=!1;"blob"===e&&(p=e,e="GET"),e=e.toUpperCase(),a.onload=function(n){var r=a.response;try{r=JSON.parse(a.responseText)}catch(e){401===a.status&&(r=console.error("access_denied",a.statusText))}var s=o(a.getAllResponseHeaders());s.statusCode=a.status,(t=t||function(){})(r||("GET"===e?i("empty_response","Could not get resource"):{}),s)},a.onerror=function(e){var n=a.responseText;try{n=JSON.parse(a.responseText)}catch(e){}t&&t(n||console.error("access_denied","Could not get resource"))};var c;if("GET"===e||"DELETE"===e)s=null;else if(s&&"string"!=typeof s&&!(s instanceof FormData)&&!(s instanceof File)&&!(s instanceof Blob)){var f=new FormData;for(c in s)s.hasOwnProperty(c)&&(s[c]instanceof HTMLInputElement?"files"in s[c]&&s[c].files.length>0&&f.append(c,s[c].files[0]):s[c]instanceof Blob?f.append(c,s[c],s.name):f.append(c,s[c]));s=f}if(a.open(e,n,!0),p&&("responseType"in a?a.responseType=p:a.overrideMimeType("text/plain; charset=x-user-defined")),r)for(c in r)a.setRequestHeader(c,r[c]);return a.send(s),a};module.exports=xhr;